// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Department {
  DNumber Int    @id
  DName   String

  employees Employee[]
}

model Position {
  PNumber  Int    @id
  PName    String
  AccessNo String

  employees Employee[]
}

model RoomStatus {
  SNumber Int    @id
  SName   String

  rooms Room[]
}

model EmployeeStatus {
  SNumber Int    @id
  SName   String

  employees Employee[]
}

model BookingStatus {
  SNumber Int    @id
  SName   String

  bookingLists BookingList[]
}

model Building {
  BNumber Int    @id
  BName   String

  floors Floor[]
}

model Floor {
  FlNumber Int    @id
  FlName   String
  BNo      Int

  building Building @relation(fields: [BNo], references: [BNumber])
  rooms    Room[]
}

model Room {
  RNumber  Int    @id
  RName    String
  Capacity Int
  VIP      Int
  FlNo     Int

  roomStatus   RoomStatus    @relation(fields: [SNo], references: [SNumber]) // Foreign key to RoomStatus
  floor        Floor         @relation(fields: [FlNo], references: [FlNumber])
  bookingLists BookingList[]

  SNo Int
}

model Employee {
  ENumber  Int    @id
  FName    String
  LName    String
  score    Int
  Email    String
  username String
  password String
  DNo      Int
  PNo      Int
  SNo      Int

  department  Department     @relation(fields: [DNo], references: [DNumber])
  position    Position       @relation(fields: [PNo], references: [PNumber])
  status      EmployeeStatus @relation(fields: [SNo], references: [SNumber])
  bookings    Booking[]
  lockLists   LockList[]
  unlockLists UnlockList[]
}

model Booking {
  BKNumber Int      @id
  BKDate   DateTime
  ENo      Int

  employee       Employee        @relation(fields: [ENo], references: [ENumber])
  bookingLists   BookingList[]
  accessLists    AccessList[]
  denyBookings   DenyBooking[]
  cancelBookings CancelBooking[]
}

model BookingList {
  BKLNumber  Int      @id
  BKLNo      Int
  RNo        Int
  Start_Date DateTime
  Start_Time String
  End_Time   String
  details    String
  QR         String
  SNo        Int

  booking Booking       @relation(fields: [BKLNo], references: [BKNumber])
  room    Room          @relation(fields: [RNo], references: [RNumber])
  status  BookingStatus @relation(fields: [SNo], references: [SNumber])

  accessLists    AccessList[]
  denyBookings   DenyBooking[]
  cancelBookings CancelBooking[]
}

model AccessList {
  ACNumber   Int    @id
  BKLNo      Int
  BKNo       Int
  AccessTime String

  bookingList BookingList @relation(fields: [BKLNo], references: [BKLNumber])
  booking     Booking     @relation(fields: [BKNo], references: [BKNumber])
}

model DenyBooking {
  DNNumber Int    @id
  BKLNo    Int
  BKNo     Int
  details  String

  bookingList BookingList @relation(fields: [BKLNo], references: [BKLNumber])
  booking     Booking     @relation(fields: [BKNo], references: [BKNumber])
}

model CancelBooking {
  CCNumber Int    @id
  BKLNo    Int
  BKNo     Int
  details  String

  bookingList BookingList @relation(fields: [BKLNo], references: [BKLNumber])
  booking     Booking     @relation(fields: [BKNo], references: [BKNumber])
}

model LockList {
  LKNo   Int      @id
  ENo    Int
  LKDate DateTime

  employee Employee @relation(fields: [ENo], references: [ENumber])
}

model UnlockList {
  ULKNo  Int      @id
  ENo    Int
  LKDate DateTime

  employee Employee @relation(fields: [ENo], references: [ENumber])
}
